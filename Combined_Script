## 13.9.2016: ## ancient dna first scripts

#Definitions
#################################################################
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/usr/bin

#Make directorys
Project=Capri
for Name in $Project
do
echo $Name
mkdir -pv /mnt/Capri/raw_data_$Project
done

#check md5sums in all files
for i in {1001..1036} 
do md5sum -c P7166_$i.md5
done >> md5sums1.txt

#combine R1 reads of all indices and R2 reads of all indices to their respective sample
raw_comb=/mnt/Capri/rawdata_Capri/reads_combined
raw_named=/mnt/Capri/rawdata_Capri/reads_named
rawg=/mnt/Capri/rawdata_Capri

#erstellt mit concatinate funtkion in excel
#R1 Reds
mv $rawg/P7166_1001/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE1.P7166_1001.R1.fastq.gz
mv $rawg/P7166_1002/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE1.P7166_1002.R1.fastq.gz
mv $rawg/P7166_1003/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE1.P7166_1003.R1.fastq.gz
mv $rawg/P7166_1004/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE3.P7166_1004.R1.fastq.gz
mv $rawg/P7166_1005/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE3.P7166_1005.R1.fastq.gz
mv $rawg/P7166_1006/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE3.P7166_1006.R1.fastq.gz
mv $rawg/P7166_1007/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE4.P7166_1007.R1.fastq.gz
mv $rawg/P7166_1008/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE4.P7166_1008.R1.fastq.gz
mv $rawg/P7166_1009/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/BE4.P7166_1009.R1.fastq.gz
mv $rawg/P7166_1010/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Be5.P7166_1010.R1.fastq.gz
mv $rawg/P7166_1011/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Be5.P7166_1011.R1.fastq.gz
mv $rawg/P7166_1012/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Be5.P7166_1012.R1.fastq.gz
mv $rawg/P7166_1013/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Chu.P7166_1013.R1.fastq.gz
mv $rawg/P7166_1014/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Chu.P7166_1014.R1.fastq.gz
mv $rawg/P7166_1015/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Chu.P7166_1015.R1.fastq.gz
mv $rawg/P7166_1016/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu01.P7166_1016.R1.fastq.gz
mv $rawg/P7166_1017/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu01.P7166_1017.R1.fastq.gz
mv $rawg/P7166_1018/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu01.P7166_1018.R1.fastq.gz
mv $rawg/P7166_1019/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu2.P7166_1019.R1.fastq.gz
mv $rawg/P7166_1020/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu2.P7166_1020.R1.fastq.gz
mv $rawg/P7166_1021/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu2.P7166_1021.R1.fastq.gz
mv $rawg/P7166_1022/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu3.P7166_1022.R1.fastq.gz
mv $rawg/P7166_1023/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu3.P7166_1023.R1.fastq.gz
mv $rawg/P7166_1024/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu3.P7166_1024.R1.fastq.gz
mv $rawg/P7166_1025/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu04.P7166_1025.R1.fastq.gz
mv $rawg/P7166_1026/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu04.P7166_1026.R1.fastq.gz
mv $rawg/P7166_1027/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Lu04.P7166_1027.R1.fastq.gz
mv $rawg/P7166_1028/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Na1.P7166_1028.R1.fastq.gz
mv $rawg/P7166_1029/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Na1.P7166_1029.R1.fastq.gz
mv $rawg/P7166_1030/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Na1.P7166_1030.R1.fastq.gz
mv $rawg/P7166_1031/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Wi1.P7166_1031.R1.fastq.gz
mv $rawg/P7166_1032/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Wi1.P7166_1032.R1.fastq.gz
mv $rawg/P7166_1033/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Wi1.P7166_1033.R1.fastq.gz
mv $rawg/P7166_1034/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Zu01.P7166_1034.R1.fastq.gz
mv $rawg/P7166_1035/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Zu01.P7166_1035.R1.fastq.gz
mv $rawg/P7166_1036/02-FASTQ/*/*_R1_001.fastq.gz $raw_named/Zu01.P7166_1036.R1.fastq.gz

##R2 reads
mv $rawg/P7166_1001/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE1.P7166_1001.R2.fastq.gz
mv $rawg/P7166_1002/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE1.P7166_1002.R2.fastq.gz
mv $rawg/P7166_1003/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE1.P7166_1003.R2.fastq.gz
mv $rawg/P7166_1004/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE3.P7166_1004.R2.fastq.gz
mv $rawg/P7166_1005/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE3.P7166_1005.R2.fastq.gz
mv $rawg/P7166_1006/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE3.P7166_1006.R2.fastq.gz
mv $rawg/P7166_1007/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE4.P7166_1007.R2.fastq.gz
mv $rawg/P7166_1008/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE4.P7166_1008.R2.fastq.gz
mv $rawg/P7166_1009/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/BE4.P7166_1009.R2.fastq.gz
mv $rawg/P7166_1010/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Be5.P7166_1010.R2.fastq.gz
mv $rawg/P7166_1011/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Be5.P7166_1011.R2.fastq.gz
mv $rawg/P7166_1012/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Be5.P7166_1012.R2.fastq.gz
mv $rawg/P7166_1013/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Chu.P7166_1013.R2.fastq.gz
mv $rawg/P7166_1014/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Chu.P7166_1014.R2.fastq.gz
mv $rawg/P7166_1015/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Chu.P7166_1015.R2.fastq.gz
mv $rawg/P7166_1016/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu01.P7166_1016.R2.fastq.gz
mv $rawg/P7166_1017/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu01.P7166_1017.R2.fastq.gz
mv $rawg/P7166_1018/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu01.P7166_1018.R2.fastq.gz
mv $rawg/P7166_1019/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu2.P7166_1019.R2.fastq.gz
mv $rawg/P7166_1020/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu2.P7166_1020.R2.fastq.gz
mv $rawg/P7166_1021/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu2.P7166_1021.R2.fastq.gz
mv $rawg/P7166_1022/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu3.P7166_1022.R2.fastq.gz
mv $rawg/P7166_1023/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu3.P7166_1023.R2.fastq.gz
mv $rawg/P7166_1024/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu3.P7166_1024.R2.fastq.gz
mv $rawg/P7166_1025/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu04.P7166_1025.R2.fastq.gz
mv $rawg/P7166_1026/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu04.P7166_1026.R2.fastq.gz
mv $rawg/P7166_1027/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Lu04.P7166_1027.R2.fastq.gz
mv $rawg/P7166_1028/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Na1.P7166_1028.R2.fastq.gz
mv $rawg/P7166_1029/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Na1.P7166_1029.R2.fastq.gz
mv $rawg/P7166_1030/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Na1.P7166_1030.R2.fastq.gz
mv $rawg/P7166_1031/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Wi1.P7166_1031.R2.fastq.gz
mv $rawg/P7166_1032/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Wi1.P7166_1032.R2.fastq.gz
mv $rawg/P7166_1033/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Wi1.P7166_1033.R2.fastq.gz
mv $rawg/P7166_1034/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Zu01.P7166_1034.R2.fastq.gz
mv $rawg/P7166_1035/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Zu01.P7166_1035.R2.fastq.gz
mv $rawg/P7166_1036/02-FASTQ/*/*_R2_001.fastq.gz $raw_named/Zu01.P7166_1036.R2.fastq.gz


for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo $Name
cat $raw_named/$Name* > $raw_comb/$Name.R1.fastq.gz
cat $raw_named/$Name* > $raw_comb/$Name.R2.fastq.gz
done

raw_comb=/mnt/Capri/rawdata_Capri/reads_combined
raw_named=/mnt/Capri/rawdata_Capri/reads_named
rawg=/mnt/Capri/rawdata_Capri
trim=/mnt/Capri/work_Capri/trim_output


for Name in Lu2 Lu3 Lu04 Na1 Wi1 Zu01 Be1 BE3 BE4 Be5 Chu Lu01 
do
echo $Name
java -jar /home/debian/bin/Trimmomatic-0.36/trimmomatic-0.36.jar PE -threads 6 -phred33 \
$raw_comb/$Name.R1.fastq.gz $raw_comb/$Name.R2.fastq.gz \
$trim/${Name}_output_forward_paired.fq.gz $trim/${Name}_output_forward_unpaired.fq.gz \
$trim/${Name}_output_reverse_paired.fq.gz $trim/${Name}_output_reverse_unpaired.fq.gz \
ILLUMINACLIP:/home/debian/bin/Trimmomatic-0.36/adapters/TruSeq3-PE-2.fa:2:30:10:1 \
LEADING:3 SLIDINGWINDOW:4:15 MINLEN:25
done &> /mnt/Capri/work_Capri/trim_output/$Name.trimlog

##############################################################
#Mapping (Details siehe bechreibung unten)
#Reverenzgenome (1. downloaden und mit gzip unzipen
wget https://www.dropbox.com/s/yx2je5rp8u1hq7o/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta.gz
###index files
bwa=/home/debian/bin/bwa/bwa
refg=/mnt/Capri/rawdata_Capri/ref_genome
output=/mnt/Capri/work_Capri/bwa_output
samtools=/home/debian/bin/samtools-1.3.1/samtools
trim=/mnt/Capri/work_Capri/trim_output
#bwa index $raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta

###########################################################################################################
#############PAIRED READS 
for Name in BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
echo $Name
$bwa mem -t 30 -R '@RG\tID:$Name\tSM:$Name\tPL:illumina\tLB:$Name'-M \
$refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
$trim/${Name}_output_{forward,reverse}_paired.fq.gz | \
$samtools view -bS - > $output/${Name}_output_bwa_pared.bam 

done 

############################################################################################################
###############UNPAIRED READS

for Name in BE3 BE4 Be5 Chu Lu01
do 
echo $Name
cat $trim/${Name}_forward_unpaired.fq.gz \
$trim/${Name}_reverse_unpaired.fq.gz \
 > $trim/${Name}_comb_unpaired.fq.gz 
done; \
for Name in Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
echo $Name
cat $trim/${Name}_output_forward_unpaired.fq.gz \
$trim/${Name}_output_reverse_unpaired.fq.gz \
 > $trim/${Name}_comb_unpaired.fq.gz
done 

$bwa mem -t 30 -R '@RG\tID:$RG\tSM:$RG\tPL:illumina\tLB:$LB'-M \
$refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
$trim/${Name}_comb_unpaired.fq.gz | \
$samtools view -bS - > $output/${Name}_output_bwa_unpared.bam
done

for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
sudo echo "$Name pared" >> $output/flagstat.txt
$samtools flagstat $output/${Name}_pared_sorted.bam >>  $output/flagstat.txt

sudo echo "$Name unpaird" >> $output/flagstat.txt
$samtools flagstat $output/${Name}_unpared_sorted.bam >> $output/flagstat.txt
done 

for Name in Be1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
echo $Name
$samtools sort --reference $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta -o $output/${Name}_unpared_sorted.bam --threads 30 $output/${Name}_output_bwa_unpared.bam 
$samtools sort --reference $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta -o $output/${Name}_pared_sorted.bam --threads 30 $output/${Name}_output_bwa_pared.bam 
done; \
for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
sudo echo "$Name pared" >> $output/flagstat.txt
$samtools flagstat $output/${Name}_pared_sorted.bam >>  $output/flagstat.txt

sudo echo "$Name unpaird" >> $output/flagstat.txt
$samtools flagstat $output/${Name}_unpared_sorted.bam >> $output/flagstat.txt
done 

#########extract flagstat name total reeds, mapped reads and propperly paired reeds for Sample_paried and total reeds and mapped reads for unpaired_sample
sed -ne '1~14p' sed -ne '2~14p' sed -ne '6~14p' sed -ne '10~28p' flagstat.txt | tee flagstat_extract.txt


####################################################################################################################################
#Mark dublicates
dub=/mnt/Capri/work_Capri/dub_output
picard=/home/debian/bin/picard.jar
bwa=/home/debian/bin/bwa/bwa
refg=/mnt/Capri/rawdata_Capri/ref_genome
output=/mnt/Capri/work_Capri/bwa_output
samtools=/home/debian/bin/samtools-1.3.1/samtools
trim=/mnt/Capri/work_Capri/trim_output


for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
echo $Name
java -jar $picard MarkDuplicates \
INPUT=$output/${Name}_pared_sorted.bam \
OUTPUT=$dub/${Name}_dedub_paired.bam \
METRICS_FILE=$dub/${Name}_dedub_paired.metrics
$samtools index $dub/${Name}_dedub_paired.bam 

java -jar $picard MarkDuplicates \
INPUT=$output/${Name}_unpared_sorted.bam \
OUTPUT=$dub/${Name}_dedub_unpaired.bam \
METRICS_FILE=$dub/${Name}_dedub_unpaired.metrics
$samtools index $dub/${Name}_dedub_unpaired.bam 
done

##add correct readgroups, only necessary if $bwa mem -t 30 -R '@RG\tID:$RG\tSM:$RG\tPL:illumina\tLB:$LB'-M was falsly wrong set. 
for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo $Name
java -jar $picard AddOrReplaceReadGroups \
      I=$dub/${Name}_dedub_paired.bam  \
      O=$dub/${Name}_paired_RG.bam \
      RGID=$Name \
      RGLB=$Name \
      RGPL=illumina \
      RGPU=HISEQ \
      RGSM=$Name
      
java -jar $picard AddOrReplaceReadGroups \
      I=$dub/${Name}_dedub_unpaired.bam \
      O=$dub/${Name}_unpaired_RG.bam \
      RGID=$Name \
      RGLB=$Name \
      RGPL=illumina \
      RGPU=HISEQ \
      RGSM=$Name
 done
 
samtools index $work/Variant_call/${Name}_paired_RG.bam
########################################################################################################
##############Variant calling
#extract name of mitochondrion annotation from ref_genome : tail -1000  goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta | zgrep '>' 
#Name of mitochondrion: >gi|316926505|ref|NC_005044.2| Capra hircus mitochondrion, complete genome
#BP_RESOLUTION will give you every single site (variant and non-variant) as a record, and it will contain the GQ scores.
###indexing file  samtools faidx $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta
#jmake dict file: 
java -jar /home/debian/bin/picard.jar CreateSequenceDictionary \
R=/mnt/Capri/rawdata_Capri/ref_genome/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
O=/mnt/Capri/rawdata_Capri/ref_genome/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.dict
      
vcf_out=/mnt/Capri/work_Capri/vcf_output
GATK=/home/debian/bin/GenomeAnalysisTK.jar


for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo $Name
$samtools index $dub/${Name}_paired_RG.bam 
$samtools index $dub/${Name}_unpaired_RG.bam 
java -jar $GATK -T HaplotypeCaller \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-L "gi|316926505|ref|NC_005044.2|" \
-I $dub/${Name}_paired_RG.bam \
-I $dub/${Name}_unpaired_RG.bam  \
-nct 30 \
--emitRefConfidence BP_RESOLUTION \
-o /mnt/Capri/work_Capri/vcf_output/${Name}_mtgenom.g.vcf.gz
done


#####1.Print the list of variant names with paths to the cript (2)

for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo -V $vcf_out/${Name}_mtgenom_paired.g.vcf.gz
echo -V $vcf_out/${Name}_mtgenom_unpaired.g.vcf.gz
done >> $vcf_out/Variant_names

#2.copy content the list to the -V postition and run GenotypeGVCFs
java -jar $GATK -T GenotypeGVCFs -nt 30 --includeNonVariantSites -R \
$refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_output/BE1_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/BE3_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/BE4_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Be5_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Chu_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Lu01_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Lu2_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Lu3_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Lu04_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Na1_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Wi1_mtgenom.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/Zu01_mtgenom.g.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants.vcf.gz


#3.Extract Filter parameters from the combined unfiltered vcf file. 
#Meaning of Parameters
#The basic difference is that QUAL refers to the variant site whereas GQ refers to a specific sample's GT
	#QUAL tells you how confident we are that there is some kind of variation at a given site. Its a 10^QUAL phred score. Depnes on size of dataset and can be enormous
	#The QD is the QUAL score normalized by allele depth (AD) for a variant. 
	#GQ tells you how confident we are that the genotype we assigned to a particular sample is correct.It is simply the second lowest PL, because it is the difference between the second lowest PL and the lowest PL
#PL : Normalized Phred-scaled likelihoods of the possible genotypes. When GQ is not good, you can typically rely on the PLs to tell you whether you do probably have a variant, but we're just not sure if it's het or hom-var.
#SOR StrandsOddsRatio:Strand bias is a type of sequencing bias in which one DNA strand is favored over the other, which can result in incorrect evaluation of the amount of evidence observed for one allele vs. the other. 
#FS FisherStrand is best suited for low coverage situations. For testing strand bias in higher coverage situations, see the StrandOddsRatio annotation he output is a Phred-scaled p-value. The higher the output value, the more likely there is to be bias
#MQRankSum MappingQulitityRankSumt This variant-level annotation compares the mapping qualities of the reads supporting the reference allele with those supporting the alternate allele. The ideal result is a value close to zero, which indicates there is little to no difference. 
#  negative value indicates that the reads supporting the alternate allele have lower mapping quality scores than those supporting the reference allele
# AN = Total number of alleles in called genotypes
mtcomb=/mnt/Capri/work_Capri/vcf_comb_mtDNA
params=/mnt/Capri/work_Capri/vcf_comb_mtDNA/filterparams

zcat $mtcomb/Combined_Variants.vcf.gz | awk '!/#/ {print $6}' > $params/QUAL.mitoch.txt
zcat $mtcomb/Combined_Variants.vcf.gz | awk '!/#/ {print $0}' | awk 'BEGIN{FS="[=]|[;]";OFS="\t"};{$1=$1};{print $0}' > $params/temp.txt 
grep -oh "QD.*" $params/temp.txt | awk '{print $2}' > $params/QD.mitoch.txt
grep -oh "FS.*" $params/temp.txt | awk '{print $2}' > $params/FS.mitoch.txt
grep -oh "SOR.*" $params/temp.txt | awk '{print $2}' > $params/SOR.mitoch.txt
grep -oh "MQRankSum.*" $params/temp.txt | awk '{print $2}' > $params/MQRank.mitoch.txt
grep -oh "AN.*" $params/temp.txt | awk '{print $2}' > $params/AN.mitoch.txt
grep -oh "MQ.*" $params/temp.txt | awk '{print $2}' > $params/MQ.mitoch.txt
grep -oh "GQ.*" $params/temp.txt | awk '{print $2}' > $params/GQ.mitoch.txt

#Print these files in R, Therefore tipe R in the comand line in linux
#Special Case for QUAL and FS because missing data is called as ".", and must therefore be excluded
QUAL = read.table("QUAL.mitoch.txt")  # read text file
QUAL <- as.data.frame(QUAL) #Makes a Dataframe 
QUAL<- as.numeric(QUAL [,1]) #Make dadaframe numeric
plot(density(QUAL)) #Make a Densityplot
dev.print(pdf, 'QUAL.pdf')

#Possibly also necessary to print this comand to exclude points: QUAL <- QUAL[QUAL$V1 != ".",] #Kicks 

#For all the others plot density like this
GQ = read.table("GQ.mitoch.txt")  # read the produced text files, X.mitoch.txt where X is QD, FS, SOR, MDRANKSUM and AN
GQ<- as.data.frame(GQ)
GQ<- as.numeric(GQ [,1]) #Make dadaframe numeric
plot(density(GQ)) #Make a Densitiy plot from second row! 
dev.print(pdf, 'MQ.pdf') #safe the plot as pdf

#different for GT Quality, 
GQ = read.table("GQ.mitoch.txt", sep=":", na.strings = "NA")  # read the produced text files, X.mitoch.txt is QD, FS, SOR, MDRANKSUM and AN
GQ<- as.data.frame(GQ)
GQ<- as.numeric(GQ [,1]) #Make dadaframe numeric
plot(density(GQ)) #Make a Densitiy plot from second row! 
dev.print(pdf, 'MQ.pdf') #safe the plot as pdf


#if necessary, scale x axis accordingli : 1=xaxis, at=spaxifie tiks, from 0 to 10 by intervall of 1), las2=2) change direction oflabeling)
plot(density(AN), xlim=c(15,25), xaxt="n") # plottet density plot von 15 to 25 und blendet x achse aus ums im nachfolgenden schritt geplottet zu werden
axis(1, at = seq(15,25, by = 2.5)) #plots x acis with new intervall from eg 15 to 25 with the interfall of 2.5, works also without x scaling)

# In Linux again
okular QD.pdf #in linux -> open the Plot 


############################################################################################################################
zcat /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants.MT.vcf.gz | awk '$5 !~/\*/' > /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_MT_indel_excludet.vcf
vcf=/mnt/Capri/work_Capri/vcf_comb_mtDNA/
vcf_out=/mnt/Capri/work_Capri/vcf_output
GATK=/home/debian/bin/GenomeAnalysisTK.jar
export PATH=$PATH:/home/debian/bin/htslib-1.3.2


/home/debian/bin/htslib-1.3.2/tabix -p vcf /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants1.vcf.gz
/home/debian/bin/htslib-1.3.2/tabix -p vcf /mnt/Capri/work_Capri/vcf_comb_mtDNA/6.alt.MT.vcf.gz 


java -jar $GATK -T CombineVariants \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/6.alt.MT.vcf.gz  \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants1.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/comb_variants/modrn_ancient_comb_combinevariants.vcf.gz \
-genotypeMergeOptions UNSORTED

#Combine VCF from ancient and modern samples
vcf-merge /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants.vcf.gz /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_MT_indel_excludet.vcf.gz | >  /mnt/Capri/work_Capri/vcf_comb_mtDNA/comb_variants/mtgenome_modern_ancient_combinevcf.vcf


path=/mnt/Capri/work_Capri/vcf_comb_mtDNA/comb_variants
#Spearete SNPs
java -jar $GATK -T SelectVariants \
-nt 4 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/comb_variants/mtgenome_modern_ancient_combinevcf.vcf \
-o $path/modrn_ancient_comb_selectvaraints.vcf \
-selectType SNP

#filter SNPs
java -jar $GATK -T VariantFiltration \
-nt 30 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/comb_variants/vcf_comb_mtDNA/comb_variants/modrn_ancient_comb_selectvaraints.vcf.gz \
-filterName "QD" -filter "QD < 2.0"  \
-filtername "usw...für alle filter!!


MQ < 20.0 || MQRankSum < -12.5 || \
FS > 60.0 || SOR > 3.0 || \
ReadPosRankSum < -8.0 || \
DP > 400" \
-o /mnt/Capri/work_Capri/comb_variants/vcf_comb_mtDNA/comb_variants/modrn_ancient_comb_variantfiltration.vcf.gz

#Select Variants
java -jar $GATK -T SelectVariants \
-nt 16 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/comb_variants/vcf_comb_mtDNA/comb_variants/modrn_ancient_comb_variantfiltration.vcf.gz \
-o /mnt/Capri/work_Capri/comb_variants/vcf_comb_mtDNA/comb_variants/modrn_ancient_comb_excludefiltered.vcf.gz \
--excludeFiltered




zgrep -v '#' /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_modern_ancient_Capra_ibex.vcf.gz | head -n 165

zcat /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_modern_ancient_Capra_ibex.vcf.gz | awk '$5 !~/\*/' > /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_mod_anc_Capra_ibex_dels_excludet.vcf
vcf=/mnt/Capri/work_Capri/vcf_comb_mtDNA/

perl ./Fasta2Phylip.pl 
Usage: perl Fasta2Phylip.pl mt_genome_comb_modern_ancient_capra_ibex.fa mt_genome_comb_modern_ancient_capra_ibex.phy

######RAXML tree building
raxml=/home/debian/bin/standard-RAxML-master
raxdic=/mnt/Capri/work_Capri/vcf_comb_mtDNA/RAXML

#Produce 100 Raxml bootrstraps plus lables and a tree
$raxml/raxmlHPC -f a -m GTRGAMMA -p 12345 -x 12345 -# 100 -s  $vcf/mt_genome_comb_modern_ancient_capra_ibex.phy -n Capri
#Look at the output file : RAxML bipartions.Capri. which chontains likelihood scores from the Bootstraping 



#make new index for the mdoern variants
/home/debian/bin/htslib-1.3.2/tabix -p vcf /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants.MT.vcf.gz
export PATH=$PATH:/home/debian/bin/htslib-1.3.2

#Combine VCF from ancient and modern samples
vcf-merge \
/mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP_filtered.vcf.gz \
/mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants.MT.vcf.gz \
| gzip -c >  /mnt/Capri/work_Capri/vcf_comb_mtDNA/mtgenome_modern_ancient_combined.vcf.gz




Convert autoput file to Phylip.pl file!
perl ./Fasta2Phylip.pl /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_modern_ancient_capra_ibex.fa /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_modern_ancient_capra_ibex.phy




###
bcftools=/home/debian/bin/bcftools-1.3.1/bcftools
seqtk=/home/debian/bin/seqtk/seqtk
vcfutils=/home/debian/bin/bcftools-1.3.1/vcfutils.pl


#Paralell analysis, make sample consensus sites for each sample
#use mpileup -r option to only call the genes on the mitochondrion
#Consensus via vcf2fq requires bcftools call -c (--consensus-caller, the original calling method (conflicts with -m))

for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo $Name
$samtools index $q25/${Name}_dedub_q25.bam 
$samtools mpileup -C50 -R -uf $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-r "gi|316926505|ref|NC_005044.2|" \
$q25/${Name}_dedub_q25.bam \
| $bcftools call -c | $vcfutils vcf2fq > /mnt/Capri/work_Capri/mpile_output/${Name}_mtgenom.fq
$seqtk seq -A /mnt/Capri/work_Capri/mpile_output/${Name}_mtgenom.fq > /mnt/Capri/work_Capri/mpile_output/${Name}_mtgenom.fa
done

#mitochondrial genome coverage -r option
for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do
echo $Name
$samtools depth -a -r "gi|316926505|ref|NC_005044.2|" ${Name}_dedub_q25.bam | awk '{ count++ ; SUM += $3 } END { print "Total: " SUM "\t" "Nucleotides: " count "\t" "Average_coverage: " SUM/count }' 
done >>$q25/mtGenome_coverage
 

chr=mt
i=mt
gunzip modern_variants_SNP_excluded.vcf.gz -c > modern_variants_SNP_excluded.vcf
echo "library(ggplot2)" > GATK.filter.chr$i.R
echo "vcffilter <- read.table(pipe('cut -f 7 modern_variants_SNP_excluded.vcf'), header=T)" >> GATK.filter.chr$i.R
echo "summary <- table(vcffilter$FILTER)" >> GATK.filter.chr$i.R
echo "write.table(summary, 'SNPFilterScores.chr${i}.txt', quote=F, row.names=F)" >> GATK.filter.chr$i.R
echo "ggplot(vcffilter, aes(x=FILTER)) + geom_bar() + labs(title = 'Variant filters applied by GATK') + theme(axis.text.x = element_text(size=7, angle=90, hjust=1.0, vjust=0.5))" >> GATK.filter.chr$i.R
echo "ggsave('SNPFilterScores.chr${i}.pdf', width=10)" >> GATK.filter.chr$i.R
echo "ggplot(vcffilter, aes(x=FILTER)) + geom_bar() + labs(title = 'Variant filters applied by GATK') + theme(axis.text.x = element_text(size=7, angle=90, hjust=1.0, vjust=0.5)) + ylim(c(0,30000))" >> GATK.filter.chr$i.R
echo "ggsave('SNPFilterScores.zoom.chr${i}.pdf', width=10)" >> GATK.filter.chr$i.R
R --no-save < GATK.filter.chr${i}.R



rm GATK.filter.chr${i}.R
rm chr$chr.snp.filt.vcf













#####################################################################################################################
## Quality Checks
################################################################################################
# 2.Run FastQC to look at data: find file in . actual folder and make fastqc file for quality check. 
fastqc=/home/debian/bin/FastQC/fastqc_
find $raw_named -name "*.fastq.gz" | xargs -n 1 $fastqc

#Links 
data_w=/Home_Ibex/Work/multiplex
work=/Home_Ibex/Work
softw=/Home_Ibex/Software
work=/Home_Ibex/Work
softw=/Home_Ibex/Software
raw_scr=/Home_Ibex/Rawdata/Screening/Ibex_referenz_genom
DMG=/Home_Ibex/Work/mapDMG

trim=/Home_Ibex/Software/Trimmomatic-0.36/trimmomatic-0.36.jar
picard=/Home_Ibex/Software/picard.jar

################################################################################################
## 1. Download data from FGCZ
################################################################################################
cd /bli/.stin/raw/rawIBEX/aut/
wget --continue --user= --password= --directory=/ http://fgcz-gstore.uzh.ch/projects/p1472/HiSeq2500_RR4_20160908_o2738/Undetermined_S0_L002_R1_001.fastq.gz
wget --continue --user= --password= --directory=/ http://fgcz-gstore.uzh.ch/projects/p1472/HiSeq2500_RR4_20160908_o2738/Undetermined_S0_L002_R2_001.fastq.gz

# das sie die indices
wget --continue --user= --password= --directory=/ http://fgcz-gstore.uzh.ch/projects/p1472/HiSeq2500_RR4_20160908_o2738/Undetermined_S0_L002_I1_001.fastq.gz
wget --continue --user= --password= --directory=/ http://fgcz-gstore.uzh.ch/projects/p1472/HiSeq2500_RR4_20160908_o2738/Undetermined_S0_L002_I2_001.fastq.gz




#3. Herausfinden qualityscore format phred33 (Ab Sanger Sequencing 1.8) oder phred64 (Platformabhängig), Herunterladen der (2.) Erstellten fastqc html daten auf lokale maschine für Ansicht mit rsync befehl. Oeffnen der html files-> suchen nach Encoding Ilumina 1.9 -> phred33
rsync -avP centos@172.23.164.214:/Home_Ibex/Rawdata/Screening/*html .


#SLIDINGWINDOW:<windowSize>:<requiredQuality> 

#MAXINFO:<targetlengt>:<strictness>, targetlength -> lengths of fragment to be allocated, strictness between 0 to 1. High strictness -0.8 faovurs read corctness, low <0.2 favours readlength

#LEADING:quality,-> specifies te minimum quality reaquired to keep a base from the start as long as below the set value
#TRAILING: Remove low quality bases from the end


######################################################################################
## Demultiplexing, e.g. deML (ok)
$softw/deml/src/deML -i $work/Index.txt \
-f $raw_scr/Undetermined_S0_L002_R1_001.fastq.gz \
-r $raw_scr/Undetermined_S0_L002_R2_001.fastq.gz \
-if1 $raw_scr/Undetermined_S0_L002_I1_001.fastq.gz \
-if2 $raw_scr/Undetermined_S0_L002_I2_001.fastq.gz \
-s $work/Summaryfile \
-e $work/Errorfile \
-o $work/demultiplexed.


##Beschreibung code
src/deML -i testData/index.txt \
-f (forward)testData/todemultiplex.fq1.gz \
-r (reverse)testData/todemultiplex.fq2.gz \
-if1 (adapterfile 1)testData/todemultiplex.i1.gz \
-if2 (adapterfile 2) testData/todemultiplex.i2.gz \
-o (output) testData/demultiplexed.<-

##Data Trimming, Trimomatic #######################################################
#Files zusammenführen
mkdir $work/demultiplexed_combined

cat demultiplexed._${Name}_r1.fq.gz \
demultiplexed._${Name}_r1.fail.fq.gz \
 > $work/demultiplexed_combined/demultiplexed._${Name}_r1_combined.fq.gz

cat demultiplexed._${Name}_r2.fq.gz \
demultiplexed._${Name}_r2.fail.fq.gz \
 > $work/demultiplexed_combined/demultiplexed._${Name}_r2_combined.fq.gz

java -jar $trim PE -phred33 -trimlog logfile \
$work/demultiplexed_combined/demultiplexed._${Name}_r1_combined.fq.gz \
$work/demultiplexed_combined/demultiplexed._${Name}_r2_combined.fq.gz \
$work/output_forward_paired.fq.gz $work/output_forward_unpaired.fq.gz \
$work/output_reverse_paired.fq.gz $work/output_reverse_unpaired.fq.gz \
ILLUMINACLIP:$softw/Trimmomatic-0.36/adapters/TruSeq3-PE-2.fa:2:30:10:1 \
LEADING:3 MAXINFO:15:0.7 SLIDINGWINDOW:4:15 MINLEN:25

#Erklärung des Codes: http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/TrimmomaticManual_V0.32.pdf

java -jar >paht trimomatic.jar< PE [-threads <threads (anzahl kerne)] [-phred33 | -phred64 (Qualitätsscre)] [-trimlog <logFile>] <input 1 (da gezipt-> anghängen von .gz)> <input 2> <paired output 1> <unpaired output 1> <paired output 2> <unpaired output 2> <step 1> ...

#Iluminaclip2:30:10:-> optionae sachen nur für palindrome 1:true 
#Iluminaclip seed mismatches2:palindrom clip treshold30:simple clip treshold 10: Optional-> min adapterlength (reduced from 8 to 1, schneidet kleine adapter weg):1, keepBothReads:true (behält reverse read).

#test: 
Name=Be04
cat demultiplexed._${Name}_r1.fq.gz \
demultiplexed._${Name}_r1.fail.fq.gz \
 > $work/demultiplexed_combined/demultiplexed._${Name}_r1_combined.fq.gz

cat demultiplexed._${Name}_r2.fq.gz \
demultiplexed._${Name}_r2.fail.fq.gz \
 > $work/demultiplexed_combined/demultiplexed._${Name}_r2_combined.fq.gz

java -jar $trim PE -phred33 -trimlog logfile \
$work/demultiplexed_combined/demultiplexed._${Name}_r1_combined.fq.gz \
$work/demultiplexed_combined/demultiplexed._${Name}_r2_combined.fq.gz \
$work/out_trim/${Name}_output_forward_paired.fq.gz $work/out_trim/${Name}_output_forward_unpaired.fq.gz \
$work/out_trim/${Name}_output_reverse_paired.fq.gz $work/out_trim/${Name}_output_reverse_unpaired.fq.gz \
ILLUMINACLIP:$softw/Trimmomatic-0.36/adapters/adapters.fa:2:30:10:1 \
LEADING:3 MAXINFO:15:0.7 SLIDINGWINDOW:4:15 MINLEN:30

##############################################################
#Mapping (Details siehe bechreibung unten)
#Reverenzgenome (1. downloaden und mit gzip unzipen
wget https://www.dropbox.com/s/yx2je5rp8u1hq7o/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta.gz
###index files
#bwa index $raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta

for Name in Be01.1b Be03 Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2
do 
	echo $Name
bwa mem $raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
$work/out_trim/${Name}_{forward,reverse}_paired.fq.gz | \
samtools sort -o $work/sam_out/${Name}_paired_comb_bwa.bam

cat $work/out_trim/${Name}_forward_unpaired.fq.gz \
$work/out_trim/${Name}_reverse_unpaired.fq.gz \
 > $work/out_trim/${Name}_combined_unpaired.fq.gz

bwa mem $raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
$work/out_trim/${Name}_combined_unpaired.fq.gz | \
samtools sort -o  $work/sam_out/${Name}_unpaired_comb_bwa.bam 

echo "$Name" >> $work/flagstat.txt
samtools flagstat $work/sam_out/${Name}_paired_comb_bwa.bam >>  $work/flagstat.txt

echo "$Name unpaird" >> $work/flagstat.txt
samtools flagstat $work/sam_out/${Name
done 
########
#Mark dublicates
for Name in Be01.1b Be03 Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2
do 
	echo $Name
java -jar $picard MarkDuplicates \
INPUT=$work/sam_out/${Name}_paired_comb_bwa.bam \
OUTPUT=$work/Dedub/${Name}_dedub_paired.bam \
METRICS_FILE=$work/Dedub/${Name}_dedub_paired.metrics

java -jar $picard AddOrReplaceReadGroups \
      I=$work/Dedub/${Name}_dedub_paired.bam \
      O=$work/Variant_call/${Name}_paired_RG.bam \
      RGID=4 \
      RGLB=lib1 \
      RGPL=illumina \
      RGPU=unit1 \
      RGSM=20
samtools index $work/Variant_call/${Name}_paired_RG.bam

java -jar $picard MarkDuplicates \
INPUT=$work/sam_out/${Name}_unpaired_comb_bwa.bam \
OUTPUT=$work/Dedub/${Name}_dedub_unpaired.bam \
METRICS_FILE=$work/Dedub/${Name}_dedub_unpaired.metrics

java -jar $picard AddOrReplaceReadGroups \
      I=$work/Dedub/${Name}_dedub_unpaired.bam \
      O=$work/Variant_call/${Name}_unpaired_RG.bam \
      RGID=4 \
      RGLB=lib1 \
      RGPL=illumina \
      RGPU=unit1 \
      RGSM=20
samtools index $work/Variant_call/${Name}_unpaired_RG.bam

done
####################################################################################################################################
#mkdir /Home_Ibex/Work/Genomcoverage

for Name in Be03 Be01.1b Be03 Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2
do
echo $Name
bedtools genomecov -bga -ibam $work/Dedub/${Name}_dedub_paired.bam -g $raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta > ${Name}_Coverage.txtS
done

###R-Script
#library("ggplot2")
#getwd()
#setwd("Home_Ibex/usw.")
#coplot=read.delim(xyz.txt) #or coplot=read.talbe(xyz.txt)
#ggplot(cov[cov$V1!="chrMT",], aes(x=V4)) + geom_histogram()
#######################################################################################################################################



export PATH=$PATH:/usr/local/bin
rm -r /$work/mapDMG
mkdir /$work/mapDMG

for Name in Be01.1b Be03 Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2
do
echo $Name
cd /$work/mapDMG
mkdir ${Name}_mapDMG
mapDamage -v \
-d /Home_Ibex/Work/mapDMG/${Name}_mapDMG \
-i $work/Dedub/${Name}_dedub_paired.bam \
-r $raw_scr/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta --rescale
done

#Explenation
#Running the rescaling of the quality scores taking into account the damage estimates:
#mapDamage -i mymap.bam -r myreference --rescale

#To run the statistical estimation using only the 5'-ends and with verbose output:
# mapDamage -d results_mydata --forward --stats-only -

#detailed explenation : https://ginolhac.github.io/mapDamage/#a3


####################################################
#Variant calling
#######################################
#Indexing reverenz genome file for Variant calling
samtools faidx /$raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta 
#Create Sequence Dictionary
java -jar $picard CreateSequenceDictionary R=/$raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta O=$raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.dict

#########Calling variants per genome

for Name in Be03 Be01.1b Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2

do 
echo $Name
java -jar /Home_Ibex/Software/GenomeAnalysisTK.jar -T HaplotypeCaller \
-R /$raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-I $work/Variant_call/${Name}_paired_RG.bam \
--emitRefConfidence GVCF \
-o $work/Variant_call/VCF/${Name}_paired_VC.g.vcf.gz

java -jar /Home_Ibex/Software/GenomeAnalysisTK.jar -T HaplotypeCaller \
-R /$raw_scr/Ibex_referenz_genom/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-I $work/Variant_call/${Name}_unpaired_RG.bam \
--emitRefConfidence GVCF \
-o $work/Variant_call/VCF/${Name}_unpaired_VC.g.vcf.gz
done

crapp und so

for Name in Be5
do 
echo $Name
$samtools sort --reference $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta -o $output/${Name}_pared_sorted.bam --threads 30 $output/${Name}_bwa_pared.bam
done


#1.Print the list of variant names with paths to the cript (2)

>Variant_names
for Name in Be03 Be01.1b Be04 Be05 Lu01 Lu02.1 Lu03 Lu04.2 Ne01.1 Chu01 Zu01 Wi01 EB2 EB3 EB6 EB7 EB10 EB12 LB1 LB2

do 
echo -V $work/Variant_call/VCF/${Name}_paired_VC.g.vcf.gz
echo -V $work/Variant_call/VCF/${Name}_unpaired_VC.g.vcf.gz
done >> Variant_names

#2.copy content the list to the -V postition and run GenotypeGVCFs
for Name in BE1 BE3 BE4 Be5 Chu Lu01 Lu2 Lu3 Lu04 Na1 Wi1 Zu01
do 
echo $Name
java -jar $GATK -T GenotypeGVCFs \
-nt 30 \
--includeNonVariantSites \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_output/${Name}_mtgenom_paired.g.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_output/${Name}_mtgenom_unpaired.g.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/single_mtgenom_vcfs/${Name}_Variants.vcf.gz 
done 

#########extract flagstat name total reeds, mapped reads and propperly paired reeds for Sample_paried and total reeds and mapped reads for unpaired_sample
sed -ne '1~14p' sed -ne '2~14p' sed -ne '6~14p' sed -ne '10~28p' flagstat.txt | tee flagstat_extract.txt

java -jar GenomeAnalysisTK.jar \
   -T CombineGVCFs \
   -R reference.fasta \
   --variant sample1.g.vcf \
   --variant sample2.g.vcf \
-o mtgenome_modern_ancient_combined.vcf.gz

   
java -jar $GATK \
-R $rag/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-T HaplotypeCaller \
-I /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP_filtered.vcf.gz \
-I /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants.MT.vcf.gz \
--emitRefConfidence GVCF \
-o mtgenome_modern_ancient_combined.vcf.gz

possible optimal filters
java -jar $GATK -T VariantFiltration \
-nt 30 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP.vcf.gz \
-filterName "SnpQual" -filter "QD < 20 || \
MQ < 20.0 || MQRankSum < -4.0 || \
FS > 10.0 || SOR > 3.0 || \
ReadPosRankSum < -8.0 || \
DP > 400" \
-G_filterName "GQ" -G_filter "GQ < 30 || DP == 0" \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_snps.vcf.gz




#Filter SNPs for ancient samples
java -jar $GATK -T VariantFiltration \
-nt 30 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP.vcf.gz \
-filterName "SnpQual" -filter "QD < 2.0 || \
MQ < 20.0 || MQRankSum < -12.5 || \
FS > 60.0 || SOR > 3.0 || \
ReadPosRankSum < -8.0 || \
DP > 400" \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_snps.vcf.gz

#Exclude filtered SNPs
java -jar $GATK -T SelectVariants \
-nt 16 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_snps.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP_excluded.vcf.gz \
--excludeFiltered


#not done for the analyss
########################################################################################################################################
#Filter Indels
java -jar $GATK -T VariantFiltration \
-nt 30 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_INDEL.vcf.gz \
-filterName "IndelQual" -filter "QD < 2.0 || \
FS > 200.0 || SOR > 10.0 || \
ReadPosRankSum < -20.0 || \
DP > 400" \
-G_filterName "GQ" -G_filter "GQ < 20 || DP == 0" \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_indels.vcf.gz

#############not done for the analyss
#Combine VCF with filtered Indels and SNPs
java -jar $GATK -T CombineVariants \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_snps.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genom_filtered_indels.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_indels_SNPs.vcf.gz \
-genotypeMergeOptions UNSORTED
##########################################################################################################################################
#############################################################################################################################################
####################  MODERN VARIANTS ##############################################################################################


*##################################
##Filter SNPs from modern samples 
####################################

java -jar $GATK -T SelectVariants \
-nt 15 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants.MT.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_filtered.MT.vcf.gz \
-selectType SNP

java -jar $GATK -T VariantFiltration \
-nt 15 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_filtered.MT.vcf.gz \
-filterName "SnpQual" -filter "QD < 2.0 || \
MQ < 20.0 || MQRankSum < -12.5 || \
FS > 60.0 || SOR > 3.0 || \
ReadPosRankSum < -8.0 || \
DP > 400" \
-G_filterName "GQ" -G_filter "GQ < 20 || DP == 0" \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_excluded.vcf.gz 

#Exclude filtered SNPs
java -jar $GATK -T SelectVariants \
-nt 30 \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_excluded.vcf.gz   \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_excluded_definitiv.vcf.gz \
--excludeFiltered

#combine modern and ancient VCFs
java -jar $GATK -T CombineVariants \
-R $refg/goat.chir1_0.GCA_000317765_1ANDmtdna.NC_005044.2.fasta \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/modern_variants_SNP_excluded_definitiv.vcf.gz \
-V /mnt/Capri/work_Capri/vcf_comb_mtDNA/Combined_Variants_SNP_excluded.vcf.gz \
-o /mnt/Capri/work_Capri/vcf_comb_mtDNA/mt_genome_comb_modern_ancient_Capra_ibex.vcf.gz \
-genotypeMergeOptions UNSORTED
